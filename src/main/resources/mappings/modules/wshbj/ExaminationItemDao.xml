<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.wshbj.dao.ExaminationItemDao">
    
	<sql id="examinationItemColumns">
		a.id AS "id",
		a.code AS "code",
		a.name AS "name", a.name_pinyin as "namePinyin",a.order_numb as "orderNumb",
		a.del_flag AS "delFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.reference_flag AS "referenceFlag",
		a.owner AS "owner",
		a.type_id AS "typeId", a.prefix_sample_code as "prefixSampleCode",
		a.unit AS "unit",
		a.price AS "price",
		a.range_max AS "rangeMax",
		a.range_min AS "rangeMin",
		a.specimen_id AS "specimenId",
		a.permission AS "permission",
		a.need_samples AS "needSamples"
	</sql>
	
	<sql id="examinationItemJoins">
	</sql>
    
	<select id="get" resultType="ExaminationItem">
		SELECT 
			<include refid="examinationItemColumns"/>
		FROM bj_examination_item a
		<include refid="examinationItemJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ExaminationItem">
		SELECT 
			<include refid="examinationItemColumns"/>
		FROM bj_examination_item a
		<include refid="examinationItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="code != null and code != ''">
				AND a.code = #{code}
			</if>
			<if test="owner != null and owner != ''">
				AND a.owner = #{owner}
			</if>
			<if test="referenceFlag != null and referenceFlag != ''">
				AND a.reference_flag = #{referenceFlag}
			</if>
			<if test="needSamples != null and needSamples != ''">
				AND a.need_samples = #{needSamples}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.order_numb,a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ExaminationItem">
		SELECT 
			<include refid="examinationItemColumns"/>
		FROM bj_examination_item a
		<include refid="examinationItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.order_numb,a.update_date DESC
			</otherwise>
		</choose>
	</select>


	<select id="findListByPackage" resultType="ExaminationItem">
		SELECT
		<include refid="examinationItemColumns"/>
		FROM bj_examination_item a,bj_package_item pi
		<include refid="examinationItemJoins"/>
		<where>
			pi.package_id = #{packageId}
			AND a.id = pi.item_id
			AND pi.del_flag = '0'
		</where>
	</select>

	<select id="findAuthorisedList" resultType="ExaminationItem">
		SELECT
		<include refid="examinationItemColumns"/>
		FROM bj_examination_item a,bj_role_item ri
		<include refid="examinationItemJoins"/>
		<where>
			ri.role_id = #{roleId}
			AND a.id = ri.item_id
		</where>
	</select>
	
	<insert id="insert">
		INSERT INTO bj_examination_item(
			id,
			code,
			name, name_pinyin,order_numb,
			del_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			reference_flag,
			owner,
			type_id, prefix_sample_code,
			unit,
			price,
			range_max,
			range_min,
			specimen_id,
			permission,
			need_samples
		) VALUES (
			#{id},
			#{code},
			#{name},#{namePinyin},#{orderNumb},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{referenceFlag},
			#{owner},
			#{typeId}, #{prefixSampleCode},
			#{unit},
			#{price},
			#{rangeMax},
			#{rangeMin},
			#{specimenId},
			#{permission},
			#{needSamples}
		)
	</insert>
	
	<update id="update">
		UPDATE bj_examination_item SET 	
			code = #{code},
			name = #{name},name_pinyin=#{namePinyin},order_numb=#{orderNumb},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			reference_flag = #{referenceFlag},
			owner = #{owner},
			type_id = #{typeId}, prefix_sample_code = #{prefixSampleCode},
			unit = #{unit},
			price = #{price},
			range_max = #{rangeMax},
			range_min = #{rangeMin},
			specimen_id = #{specimenId},
			need_samples = #{needSamples}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE bj_examination_item SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<insert id="insertRoleItem">
		INSERT INTO bj_role_item(role_id, item_id)
		<foreach collection="itemIdList" item="itemId" separator=" union all ">
			SELECT #{roleId}, #{itemId}
		</foreach>
	</insert>

	<update id="deleteRoleItem">
		DELETE FROM bj_role_item
		WHERE role_id = #{roleId}
	</update>
</mapper>